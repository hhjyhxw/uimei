package zhumeng.com.uimei.interceptor;

import java.lang.reflect.Method;

import net.sf.cglib.proxy.Enhancer;
import net.sf.cglib.proxy.MethodInterceptor;
import net.sf.cglib.proxy.MethodProxy;

/**
 * @Title: ServletRequestCglibProxy.java
 * @Package zhumeng.com.uimei.interceptor
 * @Description: TODO(用一句话描述该文件做什么)
 * @author z
 * @date 2018年6月28日
 * @version V1.0
 */
public class ServletRequestCglibProxy implements MethodInterceptor {

	
	//通过Enhancer 创建代理对象
    private Enhancer enhancer = new Enhancer();

    //通过Class对象获取代理对象
    public Object getProxy(Class c){
        //设置创建子类的类
        enhancer.setSuperclass(c);
        enhancer.setCallback(this);
        return enhancer.create();
    }
    
	/**
	 * paramObject 需要被代理对象
	 * paramMethod 需要被代理方法需要被代理方法的参数
	 * paramArrayOfObject 
	 * paramMethodProxy 代理方法
	 */
	@Override
	public Object intercept(Object paramObject, Method paramMethod,Object[] paramArrayOfObject, MethodProxy paramMethodProxy)
			throws Throwable {
		
		return null;
	}

}
