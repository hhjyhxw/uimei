package zhumeng.com.uimei.interceptor;

import java.lang.reflect.Method;

import javax.servlet.http.HttpServletRequest;

import net.sf.cglib.proxy.Enhancer;
import net.sf.cglib.proxy.MethodInterceptor;
import net.sf.cglib.proxy.MethodProxy;

/**
 * @Title: ServletRequestCglibProxy.java
 * @Package zhumeng.com.uimei.interceptor
 * @Description: TODO(用一句话描述该文件做什么)
 * @author z
 * @date 2018年6月28日
 * @version V1.0
 * @param <T>
 */
public class ServletRequestCglibProxy<T> implements MethodInterceptor {

	private Class<T> request;
	
	//通过Enhancer 创建代理对象
    private Enhancer enhancer = new Enhancer();

    //通过Class对象获取代理对象
    public Object getProxy(Class<T> request){
        //设置创建子类的类
    	this.request = request;
        enhancer.setSuperclass(request);
        enhancer.setCallback(this);
        return enhancer.create();
    }
    
	/**
	 * paramObject 需要被代理对象
	 * paramMethod 需要被代理方法需要被代理方法的参数
	 * paramArrayOfObject 
	 * paramMethodProxy 代理方法
	 */
	@Override
	public Object intercept(Object paramObject, Method paramMethod,Object[] paramArrayOfObject, MethodProxy paramMethodProxy)
			throws Throwable {
		
		if(paramMethod.getName().equalsIgnoreCase("get") &&  paramMethod.getName().equals("getParameter")){
			String value = (String) method.invoke(request, args);
			if(value==null){                         
				return null;                             
			}
			//解决以get方式提交的中文乱码问题
			return new String(value.getBytes("iso8859-1"),"UTF-8");
		}else{
			 //直接调用相应的方法进行处理
			return method.invoke(request, args);
		}
	}

}
